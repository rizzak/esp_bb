import ubinasciiimport timeimport machineimport jsonfrom connect import Connectfrom blink import Blinkfrom lcd import Lcdfrom temperature_dht11 import TemperatureSensor as Dhtfrom mqtt import Mqttdht = Dht(4)led = Blink(16)lcd = Lcd(spi=1, cs=2, dc=15, rst=0, bl=12)config = json.loads(open('config.json').read())client_id = ubinascii.hexlify(machine.unique_id())try:    mqtt = Mqtt(client_id, config['broker_ip'])except:    mqtt = Falsewhile True:    # Connect to wifi    Connect.check_and_reconnect()    try:        print(str(time.localtime()) + ' | temp: ' + str(dht.read_temp_and_hum()[0]) +              ' | hum: ' + str(dht.read_temp_and_hum()[1]))        if not mqtt:            try:                mqtt = Mqtt(client_id, config['broker_ip'])            except:                mqtt = False        if mqtt:            try:                mqtt.publish(dht.read_temp_and_hum()[0], topic='esp/temp')                mqtt.publish(dht.read_temp_and_hum()[1], topic='esp/hum')            except:                mqtt = False            publish_msg = 'Pub ok'        else:            publish_msg = 'Not pub'        lcd.text('temp: ' + str(dht.read_temp_and_hum()[0]),                 'hum: ' + str(dht.read_temp_and_hum()[1]),                 '=============',                 publish_msg)        led.blink(2, 0.1)    except:        pass    time.sleep(5)