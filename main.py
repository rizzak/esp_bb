import ubinasciiimport timeimport machineimport jsonimport networkfrom blink import Blinkfrom lcd import Lcdfrom temperature_dht11 import TemperatureSensor as Dhtfrom temperature_ds18x20 import TemperatureSensorfrom temperature_client import TemperatureClientsta_if = network.WLAN(network.STA_IF)config = json.loads(open('config.json').read())client_id = ubinascii.hexlify(machine.unique_id())sensor = TemperatureSensor(5)dht = Dht(4)led = Blink(16)lcd = Lcd(spi=1, cs=2, dc=15, rst=0, bl=12)tc = TemperatureClient(client_id, config['broker_ip'], 5, topic='esp/temp')while True:    try:        tc.publishTemperature()        msg = str(time.localtime()) + ' | temp DS: ' + str(round(sensor.read_temp())) + '2t: ' + \              str(dht.read_temp_and_hum()[0]) + 'hum: ' + str(dht.read_temp_and_hum()[1])        print(msg)        lcd.text('1t: ' + str(round(sensor.read_temp())),                 '2t: ' + str(dht.read_temp_and_hum()[0]),                 'hum: ' + str(dht.read_temp_and_hum()[1]))        led.blink(2, 0.2)    except:        pass    time.sleep(60)